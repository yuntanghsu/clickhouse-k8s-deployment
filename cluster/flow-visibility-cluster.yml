---
# Source: theia/templates/clickhouse/zookeeper.yaml
kind: Namespace
apiVersion: v1
metadata:
  name: zoons
---
# Source: theia/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: flow-visibility
---
# Source: theia/templates/clickhouse/zookeeper.yaml
# Setup max number of unavailable pods in StatefulSet
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: zookeeper-pod-disruption-budget
  namespace: zoons
spec:
  selector:
    matchLabels:
      app: zookeeper
  maxUnavailable: 1
---
# Source: theia/templates/grafana/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  namespace: flow-visibility
---
# Source: theia/templates/clickhouse/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clickhouse-secret
  namespace: flow-visibility
type: Opaque
stringData:
  username: clickhouse_operator
  password: clickhouse_operator_password
---
# Source: theia/templates/grafana/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: grafana-secret
  namespace: flow-visibility
type: Opaque
stringData:
  admin-username: admin
  admin-password: admin
---
# Source: theia/templates/clickhouse/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: clickhouse-mounted-configmap
  namespace: flow-visibility
data:
  create_table.sh: |
    #!/usr/bin/ bash
    
    # Copyright 2022 Antrea Authors.
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #      http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    
    set -e
    clickhouse client -n -h 127.0.0.1 <<-EOSQL
        CREATE TABLE IF NOT EXISTS flows_local on cluster '{cluster}' (
            timeInserted DateTime DEFAULT now(),
            flowStartSeconds DateTime,
            flowEndSeconds DateTime,
            flowEndSecondsFromSourceNode DateTime,
            flowEndSecondsFromDestinationNode DateTime,
            flowEndReason UInt8,
            sourceIP String,
            destinationIP String,
            sourceTransportPort UInt16,
            destinationTransportPort UInt16,
            protocolIdentifier UInt8,
            packetTotalCount UInt64,
            octetTotalCount UInt64,
            packetDeltaCount UInt64,
            octetDeltaCount UInt64,
            reversePacketTotalCount UInt64,
            reverseOctetTotalCount UInt64,
            reversePacketDeltaCount UInt64,
            reverseOctetDeltaCount UInt64,
            sourcePodName String,
            sourcePodNamespace String,
            sourceNodeName String,
            destinationPodName String,
            destinationPodNamespace String,
            destinationNodeName String,
            destinationClusterIP String,
            destinationServicePort UInt16,
            destinationServicePortName String,
            ingressNetworkPolicyName String,
            ingressNetworkPolicyNamespace String,
            ingressNetworkPolicyRuleName String,
            ingressNetworkPolicyRuleAction UInt8,
            ingressNetworkPolicyType UInt8,
            egressNetworkPolicyName String,
            egressNetworkPolicyNamespace String,
            egressNetworkPolicyRuleName String,
            egressNetworkPolicyRuleAction UInt8,
            egressNetworkPolicyType UInt8,
            tcpState String,
            flowType UInt8,
            sourcePodLabels String,
            destinationPodLabels String,
            throughput UInt64,
            reverseThroughput UInt64,
            throughputFromSourceNode UInt64,
            throughputFromDestinationNode UInt64,
            reverseThroughputFromSourceNode UInt64,
            reverseThroughputFromDestinationNode UInt64,
            trusted UInt8 DEFAULT 0
        ) engine=ReplicatedMergeTree('/clickhouse/{installation}/{cluster}/tables/{shard}/{database}/flows_local', '{replica}')
        ORDER BY (timeInserted, flowEndSeconds)
        TTL timeInserted + INTERVAL 3600 SECOND
        SETTINGS merge_with_ttl_timeout = 3600;
        CREATE MATERIALIZED VIEW IF NOT EXISTS flows_pod_view_local on cluster '{cluster}' 
        ENGINE = ReplicatedSummingMergeTree('/clickhouse/{installation}/{cluster}/tables/{shard}/{database}/{table}', '{replica}')
        ORDER BY (
            timeInserted,
            flowEndSeconds,
            flowEndSecondsFromSourceNode,
            flowEndSecondsFromDestinationNode,
            sourcePodName,
            destinationPodName,
            destinationIP,
            destinationServicePortName,
            flowType,
            sourcePodNamespace,
            destinationPodNamespace)
        TTL timeInserted + INTERVAL 3600 SECOND
        SETTINGS merge_with_ttl_timeout = 3600
        POPULATE
        AS SELECT
            timeInserted,
            flowEndSeconds,
            flowEndSecondsFromSourceNode,
            flowEndSecondsFromDestinationNode,
            sourcePodName,
            destinationPodName,
            destinationIP,
            destinationServicePortName,
            flowType,
            sourcePodNamespace,
            destinationPodNamespace,
            sum(octetDeltaCount) AS octetDeltaCount,
            sum(reverseOctetDeltaCount) AS reverseOctetDeltaCount,
            sum(throughput) AS throughput,
            sum(reverseThroughput) AS reverseThroughput,
            sum(throughputFromSourceNode) AS throughputFromSourceNode,
            sum(throughputFromDestinationNode) AS throughputFromDestinationNode
        FROM flows
        GROUP BY
            timeInserted,
            flowEndSeconds,
            flowEndSecondsFromSourceNode,
            flowEndSecondsFromDestinationNode,
            sourcePodName,
            destinationPodName,
            destinationIP,
            destinationServicePortName,
            flowType,
            sourcePodNamespace,
            destinationPodNamespace;
        CREATE MATERIALIZED VIEW IF NOT EXISTS flows_node_view_local on cluster '{cluster}'
        ENGINE = ReplicatedSummingMergeTree('/clickhouse/{installation}/{cluster}/tables/{shard}/{database}/{table}', '{replica}')
        ORDER BY (
            timeInserted,
            flowEndSeconds,
            flowEndSecondsFromSourceNode,
            flowEndSecondsFromDestinationNode,
            sourceNodeName,
            destinationNodeName,
            sourcePodNamespace,
            destinationPodNamespace)
        TTL timeInserted + INTERVAL 3600 SECOND
        SETTINGS merge_with_ttl_timeout = 3600
        POPULATE
        AS SELECT
            timeInserted,
            flowEndSeconds,
            flowEndSecondsFromSourceNode,
            flowEndSecondsFromDestinationNode,
            sourceNodeName,
            destinationNodeName,
            sourcePodNamespace,
            destinationPodNamespace,
            sum(octetDeltaCount) AS octetDeltaCount,
            sum(reverseOctetDeltaCount) AS reverseOctetDeltaCount,
            sum(throughput) AS throughput,
            sum(reverseThroughput) AS reverseThroughput,
            sum(throughputFromSourceNode) AS throughputFromSourceNode,
            sum(reverseThroughputFromSourceNode) AS reverseThroughputFromSourceNode,
            sum(throughputFromDestinationNode) AS throughputFromDestinationNode,
            sum(reverseThroughputFromDestinationNode) AS reverseThroughputFromDestinationNode
        FROM flows
        GROUP BY
            timeInserted,
            flowEndSeconds,
            flowEndSecondsFromSourceNode,
            flowEndSecondsFromDestinationNode,
            sourceNodeName,
            destinationNodeName,
            sourcePodNamespace,
            destinationPodNamespace;
        CREATE MATERIALIZED VIEW IF NOT EXISTS flows_policy_view_local on cluster '{cluster}'
        ENGINE = ReplicatedSummingMergeTree('/clickhouse/{installation}/{cluster}/tables/{shard}/{database}/{table}', '{replica}')
        ORDER BY (
            timeInserted,
            flowEndSeconds,
            flowEndSecondsFromSourceNode,
            flowEndSecondsFromDestinationNode,
            egressNetworkPolicyName,
            egressNetworkPolicyRuleAction,
            ingressNetworkPolicyName,
            ingressNetworkPolicyRuleAction,
            sourcePodNamespace,
            destinationPodNamespace)
        TTL timeInserted + INTERVAL 3600 SECOND
        SETTINGS merge_with_ttl_timeout = 3600
        POPULATE
        AS SELECT
            timeInserted,
            flowEndSeconds,
            flowEndSecondsFromSourceNode,
            flowEndSecondsFromDestinationNode,
            egressNetworkPolicyName,
            egressNetworkPolicyRuleAction,
            ingressNetworkPolicyName,
            ingressNetworkPolicyRuleAction,
            sourcePodNamespace,
            destinationPodNamespace,
            sum(octetDeltaCount) AS octetDeltaCount,
            sum(reverseOctetDeltaCount) AS reverseOctetDeltaCount,
            sum(throughput) AS throughput,
            sum(reverseThroughput) AS reverseThroughput,
            sum(throughputFromSourceNode) AS throughputFromSourceNode,
            sum(reverseThroughputFromSourceNode) AS reverseThroughputFromSourceNode,
            sum(throughputFromDestinationNode) AS throughputFromDestinationNode,
            sum(reverseThroughputFromDestinationNode) AS reverseThroughputFromDestinationNode
        FROM flows
        GROUP BY
            timeInserted,
            flowEndSeconds,
            flowEndSecondsFromSourceNode,
            flowEndSecondsFromDestinationNode,
            egressNetworkPolicyName,
            egressNetworkPolicyRuleAction,
            ingressNetworkPolicyName,
            ingressNetworkPolicyRuleAction,
            sourcePodNamespace,
            destinationPodNamespace;
        CREATE TABLE IF NOT EXISTS recommendations_local on cluster '{cluster}' (
            id String,
            type String,
            timeCreated DateTime,
            yamls String
        ) engine=ReplicatedMergeTree('/clickhouse/{installation}/{cluster}/tables/{shard}/{database}/{table}', '{replica}')
        ORDER BY (timeCreated);
        CREATE TABLE IF NOT EXISTS flows on cluster '{cluster}' AS flows_local
        engine=Distributed('{cluster}', default, flows_local, rand());

        CREATE TABLE IF NOT EXISTS flows_pod_view on cluster '{cluster}' AS flows_pod_view_local
        engine=Distributed('{cluster}', default, flows_pod_view_local, rand());

        CREATE TABLE IF NOT EXISTS flows_node_view on cluster '{cluster}' AS flows_node_view_local
        engine=Distributed('{cluster}', default, flows_node_view_local, rand());

        CREATE TABLE IF NOT EXISTS flows_policy_view on cluster '{cluster}' AS flows_policy_view_local
        engine=Distributed('{cluster}', default, flows_pod_view_local, rand());

        CREATE TABLE IF NOT EXISTS recommendations on cluster '{cluster}' AS recommendations_local
        engine=Distributed('{cluster}', default, recommendations_local, rand());

    EOSQL
---
# Source: theia/templates/grafana/dashboard-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-config
  namespace: flow-visibility
data:
  flow_records_dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 2,
      "iteration": 1644612871636,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 5,
            "x": 0,
            "y": 0
          },
          "id": 4,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "builderOptions": {
                "database": "default",
                "fields": [],
                "filters": [],
                "limit": 100,
                "mode": "list",
                "orderBy": [],
                "table": "flows"
              },
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "ClickHouse"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 1,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "interval": "",
              "intervalFactor": 1,
              "meta": {
                "builderOptions": {
                  "database": "default",
                  "fields": [],
                  "filters": [],
                  "limit": 100,
                  "mode": "list",
                  "orderBy": [],
                  "table": "flows"
                }
              },
              "query": "SELECT count()\nFROM $table\n",
              "queryType": "sql",
              "rawQuery": "SELECT count()\nFROM default.flows",
              "rawSql": "SELECT count(*) as count\nFROM flows\nWHERE $__timeFilter(flowEndSeconds)",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows",
              "tableLoading": false
            }
          ],
          "title": "Flow Records Count",
          "transparent": true,
          "type": "stat"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 19,
            "x": 5,
            "y": 0
          },
          "id": 6,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "ClickHouse"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 1,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "intervalFactor": 1,
              "query": "SELECT\n    $timeSeries as t,\n    count() as count\nFROM $table\n\nWHERE $timeFilter\n\nGROUP BY t\n\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT\n    (intDiv(toUInt32(flowEndSeconds), 1) * 1) * 1000 as t,\n    count() as count\nFROM default.flows\n\nWHERE\n    flowEndSeconds >= toDateTime(1642711765) AND flowEndSeconds <= toDateTime(1642712665)\n    AND sourcePodNamespace = 'antrea-test'\nGROUP BY t\n\nORDER BY t\n",
              "rawSql": "SELECT count() as count, $__timeInterval(flowEndSeconds) as time\nFROM flows\nWHERE $__timeFilter(flowEndSeconds)\nGROUP BY time\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows",
              "tableLoading": false
            }
          ],
          "title": "Flow Records Count",
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "filterable": true
              },
              "mappings": [],
              "noValue": "N/A",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "flowType"
                },
                "properties": [
                  {
                    "id": "mappings",
                    "value": [
                      {
                        "options": {
                          "1": {
                            "index": 0,
                            "text": "Intra-Node"
                          },
                          "2": {
                            "index": 1,
                            "text": "Inter-Node"
                          },
                          "3": {
                            "index": 2,
                            "text": "To External"
                          },
                          "4": {
                            "index": 3,
                            "text": "From External"
                          }
                        },
                        "type": "value"
                      }
                    ]
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "sourcePodNamespace"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 199
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "destinationPodName"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 183
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "destinationPodNamespace"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 214
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "destinationNodeName"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 183
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "sourceNodeName"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 161
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "sourcePodName"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 149
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "destinationServicePort"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 184
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "destinationServicePortName"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 215
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "ingressNetworkPolicyName"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 213
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "ingressNetworkPolicyNamespace"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 256
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "ingressNetworkPolicyRuleName"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 243
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "ingressNetworkPolicyRuleAction"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 249
                  },
                  {
                    "id": "mappings",
                    "value": [
                      {
                        "options": {
                          "0": {
                            "index": 0,
                            "text": "No Action"
                          },
                          "1": {
                            "index": 1,
                            "text": "Allow"
                          },
                          "2": {
                            "index": 2,
                            "text": "Drop"
                          },
                          "3": {
                            "index": 3,
                            "text": "Reject"
                          }
                        },
                        "type": "value"
                      }
                    ]
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "ingressNetworkPolicyType"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 209
                  },
                  {
                    "id": "mappings",
                    "value": [
                      {
                        "options": {
                          "0": {
                            "index": 3,
                            "text": "N/A"
                          },
                          "1": {
                            "index": 0,
                            "text": "K8s NetworkPolicy"
                          },
                          "2": {
                            "index": 1,
                            "text": "Antrea NetworkPolicy"
                          },
                          "3": {
                            "index": 2,
                            "text": "Antrea ClusterNetworkPolicy"
                          }
                        },
                        "type": "value"
                      }
                    ]
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "egressNetworkPolicyName"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 215
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "egressNetworkPolicyRuleName"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 238
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "egressNetworkPolicyNamespace"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 248
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "egressNetworkPolicyType"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 207
                  },
                  {
                    "id": "mappings",
                    "value": [
                      {
                        "options": {
                          "0": {
                            "index": 3,
                            "text": "N/A"
                          },
                          "1": {
                            "index": 0,
                            "text": "K8s NetworkPolicy"
                          },
                          "2": {
                            "index": 1,
                            "text": "Antrea NetworkPolicy"
                          },
                          "3": {
                            "index": 2,
                            "text": "Antrea ClusterNetworkPolicy"
                          }
                        },
                        "type": "value"
                      }
                    ]
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "destinationPodLabels"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 173
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "throughputFromSourceNode"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 230
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "throughputFromDestinationNode"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 251
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reverseThroughputFromSourceNode"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 273
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reverseThroughputFromDestinationNode"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 299
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reverseOctetDeltaCount"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 186
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reversePacketDeltaCount"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 204
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reverseOctetTotalCount"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 191
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reversePacketTotalCount"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 199
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "flowEndSecondsFromDestinationNode"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 283
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "flowEndSecondsFromSourceNode"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 255
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "protocolIdentifier"
                },
                "properties": [
                  {
                    "id": "mappings",
                    "value": [
                      {
                        "options": {
                          "6": {
                            "index": 0,
                            "text": "TCP"
                          },
                          "17": {
                            "index": 1,
                            "text": "UDP"
                          }
                        },
                        "type": "value"
                      }
                    ]
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "sourceTransportPort"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 170
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "destinationTransportPort"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 196
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "destinationClusterIP"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 168
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "egressNetworkPolicyRuleAction"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 244
                  },
                  {
                    "id": "mappings",
                    "value": [
                      {
                        "options": {
                          "0": {
                            "index": 0,
                            "text": "No Action"
                          },
                          "1": {
                            "index": 1,
                            "text": "Allow"
                          },
                          "2": {
                            "index": 2,
                            "text": "Drop"
                          },
                          "3": {
                            "index": 3,
                            "text": "Reject"
                          }
                        },
                        "type": "value"
                      }
                    ]
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reverseThroughput"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 161
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "flowEndSeconds"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 185
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "flowStartSeconds"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 184
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "timeInserted"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 181
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 15,
            "w": 24,
            "x": 0,
            "y": 7
          },
          "id": 2,
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "ClickHouse"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 1,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "intervalFactor": 1,
              "query": "SELECT\n    $timeSeries as t,\n    *\nFROM $table\n\nWHERE $timeFilter\n\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT\n    (intDiv(toUInt32(flowEndSeconds), 1) * 1) * 1000 as t,\n    *\nFROM default.flows\n\nWHERE flowEndSeconds >= toDateTime(1642715797) AND flowEndSeconds <= toDateTime(1642716697)\n\nORDER BY t",
              "rawSql": "SELECT * \nFROM flows\nWHERE $__timeFilter(flowEndSeconds)",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows",
              "tableLoading": false
            }
          ],
          "title": "Flow Records Table",
          "transformations": [
            {
              "id": "seriesToColumns",
              "options": {}
            }
          ],
          "transparent": true,
          "type": "table"
        }
      ],
      "refresh": "",
      "schemaVersion": 34,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "PDEE91DDB90597936"
            },
            "filters": [],
            "hide": 0,
            "name": "Filter",
            "skipUrlSync": false,
            "type": "adhoc"
          },
          {
            "hide": 2,
            "name": "clickhouse_adhoc_query",
            "query": "default.flows",
            "skipUrlSync": false,
            "type": "constant"
          }
        ]
      },
      "time": {
        "from": "now-30m",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "flow_records_dashboard",
      "uid": "t1UGX7t7k",
      "version": 2,
      "weekStart": ""
    }
  networkpolicy_allow_dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 5,
      "iteration": 1644982999763,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 13,
          "options": {
            "seriesCountSize": "sm",
            "showSeriesCount": false,
            "text": "Default value of text input option"
          },
          "pluginVersion": "7.5.2",
          "targets": [
            {
              "builderOptions": {
                "database": "default",
                "fields": [
                  "ingressNetworkPolicyName"
                ],
                "filters": [],
                "limit": 100,
                "metrics": [
                  {
                    "aggregation": "sum",
                    "field": "octetDeltaCount"
                  }
                ],
                "mode": "aggregate",
                "orderBy": [],
                "table": "flows_policy_view"
              },
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 1,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "intervalFactor": 1,
              "meta": {
                "builderOptions": {
                  "database": "default",
                  "fields": [
                    "ingressNetworkPolicyName"
                  ],
                  "filters": [],
                  "limit": 100,
                  "metrics": [
                    {
                      "aggregation": "sum",
                      "field": "octetDeltaCount"
                    }
                  ],
                  "mode": "aggregate",
                  "orderBy": [],
                  "table": "flows_policy_view"
                }
              },
              "query": "SELECT SUM(octetDeltaCount), (egressNetworkPolicyName, ingressNetworkPolicyName) AS pair\nFROM $table\nWHERE $timeFilter\nAND (egressNetworkPolicyRuleAction == 1 OR ingressNetworkPolicyRuleAction == 1)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair\n",
              "queryType": "sql",
              "rawQuery": "SELECT SUM(octetDeltaCount), (egressNetworkPolicyName, ingressNetworkPolicyName) AS pair\nFROM default.flows_policy_view\nWHERE flowEndSeconds >= toDateTime(1642198255) AND flowEndSeconds <= toDateTime(1642200055)\nAND (egressNetworkPolicyRuleAction == 1 OR ingressNetworkPolicyRuleAction == 1)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair",
              "rawSql": "select SUM(octetDeltaCount) as bytes, egressNetworkPolicyName as source, ingressNetworkPolicyName as destination, ingressNetworkPolicyName as destinationIP\nFrom flows_policy_view\nWHERE $__timeFilter(flowEndSeconds) \nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator') \nAND (egressNetworkPolicyRuleAction == 1 OR ingressNetworkPolicyRuleAction == 1)\nGROUP BY source, destination\nHAVING bytes != 0",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_policy_view",
              "tableLoading": false
            }
          ],
          "title": "Cumulative Bytes of Network Policy ",
          "transparent": true,
          "type": "antreaflowvisibility-grafana-sankey-plugin"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "id": 12,
          "options": {
            "seriesCountSize": "sm",
            "showSeriesCount": false,
            "text": "Default value of text input option"
          },
          "pluginVersion": "7.5.2",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 1,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "intervalFactor": 1,
              "query": "SELECT SUM(reverseOctetDeltaCount),  (egressNetworkPolicyName, ingressNetworkPolicyName) AS pair\nFROM $table\nWHERE $timeFilter\nAND (egressNetworkPolicyRuleAction == 1 OR ingressNetworkPolicyRuleAction == 1)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair\n",
              "queryType": "randomWalk",
              "rawQuery": "SELECT SUM(reverseOctetDeltaCount),  (egressNetworkPolicyName, ingressNetworkPolicyName) AS pair\nFROM default.flows_policy_view\nWHERE flowEndSeconds >= toDateTime(1642198301) AND flowEndSeconds <= toDateTime(1642200101)\nAND (egressNetworkPolicyRuleAction == 1 OR ingressNetworkPolicyRuleAction == 1)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair",
              "rawSql": "select SUM(reverseOctetDeltaCount) as bytes, egressNetworkPolicyName as source, ingressNetworkPolicyName as destination, ingressNetworkPolicyName as destinationIP\nFrom flows_policy_view\nWHERE $__timeFilter(flowEndSeconds)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND (egressNetworkPolicyRuleAction == 1 OR ingressNetworkPolicyRuleAction == 1)\nGROUP BY source, destination\nHAVING bytes != 0",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_policy_view",
              "tableLoading": false
            }
          ],
          "title": "Cumulative Reverse Bytes of Network Policy",
          "transparent": true,
          "type": "antreaflowvisibility-grafana-sankey-plugin"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 18
          },
          "id": 21,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromSourceNode), sourcePodName\nFROM $table\nWHERE $timeFilter \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSeconds), 60) * 60) * 1000 as t, SUM(throughputFromSourceNode), sourcePodName\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642532448) AND flowEndSeconds <= toDateTime(1642534248) \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSeconds) as time, CONCAT(egressNetworkPolicyName, '->', ingressNetworkPolicyName) as pair, SUM(throughput)\nFROM flows_policy_view\nWHERE $__timeFilter(flowEndSeconds) \nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator') \nAND (egressNetworkPolicyRuleAction == 1 OR ingressNetworkPolicyRuleAction == 1)\nGROUP BY time, pair\nHAVING SUM(throughput) != 0\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Throughput of Network Policy",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "pair"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 18
          },
          "id": 22,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromSourceNode), sourcePodName\nFROM $table\nWHERE $timeFilter \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSeconds), 60) * 60) * 1000 as t, SUM(throughputFromSourceNode), sourcePodName\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642532448) AND flowEndSeconds <= toDateTime(1642534248) \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSeconds) as time, CONCAT(egressNetworkPolicyName, '->', ingressNetworkPolicyName) as pair, SUM(reverseThroughput)\nFROM flows_policy_view\nWHERE $__timeFilter(time)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND (egressNetworkPolicyRuleAction == 1 OR ingressNetworkPolicyRuleAction == 1)\nGROUP BY time, pair\nHAVING SUM(reverseThroughput) != 0\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Reverse Throughput of Network Policy",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "pair"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 28
          },
          "id": 23,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromSourceNode), sourcePodName\nFROM $table\nWHERE $timeFilter \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSeconds), 60) * 60) * 1000 as t, SUM(throughputFromSourceNode), sourcePodName\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642532448) AND flowEndSeconds <= toDateTime(1642534248) \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSeconds) as time, egressNetworkPolicyName, SUM(throughput)\nFROM flows_policy_view\nWHERE sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND egressNetworkPolicyName != ''\nAND egressNetworkPolicyRuleAction == 1\nAND $__timeFilter(time)\nGROUP BY time, egressNetworkPolicyName\nHAVING SUM(throughput) != 0\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Throughput of Egress Network Policy",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "egressNetworkPolicyName"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": [],
              "unit": "decbytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 28
          },
          "id": 18,
          "options": {
            "legend": {
              "displayMode": "table",
              "placement": "right",
              "values": [
                "percent",
                "value"
              ]
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": true
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "format": 1,
              "rawSql": "SELECT SUM(octetDeltaCount), egressNetworkPolicyName\nFROM flows_policy_view\nWHERE sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND egressNetworkPolicyName != ''\nAND egressNetworkPolicyRuleAction == 1\nAND $__timeFilter(flowEndSeconds)\nGROUP BY egressNetworkPolicyName\nHAVING SUM(octetDeltaCount) != 0",
              "refId": "A"
            }
          ],
          "title": "Cumulative Bytes of Egress Network Policy",
          "transparent": true,
          "type": "piechart"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 38
          },
          "id": 24,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromSourceNode), sourcePodName\nFROM $table\nWHERE $timeFilter \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSeconds), 60) * 60) * 1000 as t, SUM(throughputFromSourceNode), sourcePodName\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642532448) AND flowEndSeconds <= toDateTime(1642534248) \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSeconds) as time, ingressNetworkPolicyName, SUM(throughput)\nFROM flows_policy_view\nWHERE sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND ingressNetworkPolicyName != ''\nAND ingressNetworkPolicyRuleAction == 1\nAND $__timeFilter(time)\nGROUP BY time, ingressNetworkPolicyName\nHAVING SUM(throughput) != 0\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Throughput of Ingress Network Policy",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "ingressNetworkPolicyName"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": [],
              "unit": "decbytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 38
          },
          "id": 19,
          "options": {
            "legend": {
              "displayMode": "table",
              "placement": "right",
              "values": [
                "percent",
                "value"
              ]
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": true
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "format": 1,
              "rawSql": "SELECT SUM(octetDeltaCount), ingressNetworkPolicyName\nFROM flows_policy_view\nWHERE sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND ingressNetworkPolicyName != ''\nAND ingressNetworkPolicyRuleAction == 1\nAND $__timeFilter(flowEndSeconds)\nGROUP BY ingressNetworkPolicyName\nHAVING SUM(octetDeltaCount) != 0",
              "refId": "A"
            }
          ],
          "title": "Cumulative Bytes of Ingress Network Policy",
          "transparent": true,
          "type": "piechart"
        }
      ],
      "refresh": "",
      "schemaVersion": 34,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "PDEE91DDB90597936"
            },
            "filters": [],
            "hide": 0,
            "name": "Filter",
            "skipUrlSync": false,
            "type": "adhoc"
          },
          {
            "hide": 2,
            "name": "clickhouse_adhoc_query",
            "query": "default.flows_policy_view",
            "skipUrlSync": false,
            "type": "constant"
          }
        ]
      },
      "time": {
        "from": "now-30m",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "networkpolicy_allow_dashboard",
      "uid": "kWk0EW1nz",
      "version": 5,
      "weekStart": ""
    }
  node_to_node_dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 4,
      "iteration": 1644612915701,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 11,
          "interval": "60",
          "options": {
            "seriesCountSize": "sm",
            "showSeriesCount": false,
            "text": "Default value of text input option"
          },
          "pluginVersion": "7.5.2",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 1,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "intervalFactor": 1,
              "query": "SELECT SUM(octetDeltaCount), (sourceNodeName, destinationNodeName) as pair\nFROM $table\nWHERE $timeFilter\nAND sourceNodeName != ''\nAND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair\n",
              "queryType": "sql",
              "rawQuery": false,
              "rawSql": "select SUM(octetDeltaCount) as bytes, sourceNodeName as source, destinationNodeName as destination\nFrom flows_node_view\nWHERE source != '' AND destination != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(flowEndSeconds)\nGROUP BY source, destination",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_node_view",
              "tableLoading": false
            }
          ],
          "title": "Cumulative Bytes of Node-to-Node",
          "transformations": [
            {
              "id": "labelsToFields",
              "options": {}
            }
          ],
          "transparent": true,
          "type": "antreaflowvisibility-grafana-sankey-plugin"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "id": 14,
          "interval": "60s",
          "options": {
            "seriesCountSize": "sm",
            "showSeriesCount": false,
            "text": "Default value of text input option"
          },
          "pluginVersion": "7.5.2",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 1,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "intervalFactor": 1,
              "query": "SELECT SUM(reverseOctetDeltaCount), (sourceNodeName, destinationNodeName) as pair\nFROM $table\nWHERE $timeFilter\nAND sourceNodeName != ''\nAND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair\n",
              "queryType": "randomWalk",
              "rawQuery": false,
              "rawSql": "select SUM(reverseOctetDeltaCount) as bytes, sourceNodeName as source, destinationNodeName as destination\nFrom flows_node_view\nWHERE source != '' AND destination != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(flowEndSeconds)\nGROUP BY source, destination",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_node_view",
              "tableLoading": false
            }
          ],
          "title": "Cumulative Reverse Bytes of Node-to-Node",
          "transparent": true,
          "type": "antreaflowvisibility-grafana-sankey-plugin"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 18
          },
          "id": 18,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSecondsFromDestinationNode",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromDestinationNode), destinationNodeName\nFROM $table\nWHERE $timeFilter\nAND sourceNodeName != ''\nAND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY destinationNodeName, t\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSecondsFromDestinationNode), 60) * 60) * 1000 as t, SUM(throughputFromDestinationNode), destinationNodeName\nFROM default.flows_node_view\nWHERE flowEndSecondsFromDestinationNode >= toDateTime(1642533454) AND flowEndSecondsFromDestinationNode <= toDateTime(1642535254)\nAND sourceNodeName != ''\nAND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY destinationNodeName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSeconds) as time, CONCAT(sourceNodeName, '->', destinationNodeName) as pair, SUM(throughput) as Node\nFROM flows_node_view\nWHERE sourceNodeName != '' AND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(time)\nGROUP BY time, pair\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_node_view",
              "tableLoading": false
            }
          ],
          "title": "Throughput of Node-to-Node",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "pair"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 18
          },
          "id": 24,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSecondsFromDestinationNode",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromDestinationNode), destinationNodeName\nFROM $table\nWHERE $timeFilter\nAND sourceNodeName != ''\nAND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY destinationNodeName, t\nORDER BY t\n",
              "queryType": "randomWalk",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSecondsFromDestinationNode), 60) * 60) * 1000 as t, SUM(throughputFromDestinationNode), destinationNodeName\nFROM default.flows_node_view\nWHERE flowEndSecondsFromDestinationNode >= toDateTime(1642533454) AND flowEndSecondsFromDestinationNode <= toDateTime(1642535254)\nAND sourceNodeName != ''\nAND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY destinationNodeName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSeconds) as time, CONCAT(sourceNodeName, '->', destinationNodeName) as pair, SUM(reverseThroughput) as Node\nFROM flows_node_view\nWHERE sourceNodeName != '' AND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(time)\nGROUP BY time, pair\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_node_view",
              "tableLoading": false
            }
          ],
          "title": "Reverse Throughput of Node-to-Node",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "pair"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 28
          },
          "id": 25,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSecondsFromDestinationNode",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromDestinationNode), destinationNodeName\nFROM $table\nWHERE $timeFilter\nAND sourceNodeName != ''\nAND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY destinationNodeName, t\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSecondsFromDestinationNode), 60) * 60) * 1000 as t, SUM(throughputFromDestinationNode), destinationNodeName\nFROM default.flows_node_view\nWHERE flowEndSecondsFromDestinationNode >= toDateTime(1642533454) AND flowEndSecondsFromDestinationNode <= toDateTime(1642535254)\nAND sourceNodeName != ''\nAND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY destinationNodeName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSecondsFromSourceNode) as time, sourceNodeName, SUM(throughputFromSourceNode)\nFROM flows_node_view\nWHERE sourceNodeName != '' \nAND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(time)\nGROUP BY time, sourceNodeName\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_node_view",
              "tableLoading": false
            }
          ],
          "title": "Throughput of Node as Source",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "sourceNodeName"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": [],
              "unit": "decbytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 28
          },
          "id": 21,
          "interval": "60s",
          "options": {
            "displayLabels": [],
            "legend": {
              "displayMode": "table",
              "placement": "right",
              "values": [
                "percent",
                "value"
              ]
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": true
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "format": 1,
              "rawSql": "SELECT SUM(octetDeltaCount), sourceNodeName\nFROM flows_node_view\nWHERE sourceNodeName != '' AND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(flowEndSeconds)\nGROUP BY sourceNodeName",
              "refId": "A"
            }
          ],
          "title": "Cumulative Bytes of Node as Source",
          "transparent": true,
          "type": "piechart"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 38
          },
          "id": 26,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSecondsFromDestinationNode",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromDestinationNode), destinationNodeName\nFROM $table\nWHERE $timeFilter\nAND sourceNodeName != ''\nAND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY destinationNodeName, t\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSecondsFromDestinationNode), 60) * 60) * 1000 as t, SUM(throughputFromDestinationNode), destinationNodeName\nFROM default.flows_node_view\nWHERE flowEndSecondsFromDestinationNode >= toDateTime(1642533454) AND flowEndSecondsFromDestinationNode <= toDateTime(1642535254)\nAND sourceNodeName != ''\nAND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY destinationNodeName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSecondsFromDestinationNode) as time, destinationNodeName, SUM(throughputFromDestinationNode)\nFROM flows_node_view\nWHERE sourceNodeName != '' AND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(time)\nGROUP BY time, destinationNodeName\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_node_view",
              "tableLoading": false
            }
          ],
          "title": "Throughput of Node as Destination",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "destinationNodeName"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": [],
              "unit": "decbytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 38
          },
          "id": 22,
          "options": {
            "legend": {
              "displayMode": "table",
              "placement": "right",
              "values": [
                "percent",
                "value"
              ]
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": true
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "format": 1,
              "rawSql": "SELECT SUM(octetDeltaCount), destinationNodeName\nFROM flows_node_view\nWHERE sourceNodeName != '' AND destinationNodeName != ''\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(flowEndSeconds)\nGROUP BY destinationNodeName",
              "refId": "A"
            }
          ],
          "title": "Cumulative Bytes of Node as Destination",
          "transparent": true,
          "type": "piechart"
        }
      ],
      "refresh": "",
      "schemaVersion": 34,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "PDEE91DDB90597936"
            },
            "filters": [],
            "hide": 0,
            "name": "Filter",
            "skipUrlSync": false,
            "type": "adhoc"
          },
          {
            "hide": 2,
            "name": "clickhouse_adhoc_query",
            "query": "default.flows_node_view",
            "skipUrlSync": false,
            "type": "constant"
          }
        ]
      },
      "time": {
        "from": "now-30m",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "node_to_node_dashboard",
      "uid": "1F56RJh7z",
      "version": 10,
      "weekStart": ""
    }
  pod_to_external_dashboard.json: |-
    {
        "annotations": {
            "list": [
                {
                    "builtIn": 1,
                    "datasource": "-- Grafana --",
                    "enable": true,
                    "hide": true,
                    "iconColor": "rgba(0, 211, 255, 1)",
                    "name": "Annotations & Alerts",
                    "target": {
                        "limit": 100,
                        "matchAny": false,
                        "tags": [],
                        "type": "dashboard"
                    },
                    "type": "dashboard"
                }
            ]
        },
        "editable": true,
        "fiscalYearStartMonth": 0,
        "graphTooltip": 0,
        "id": 5,
        "iteration": 1644612843565,
        "links": [],
        "liveNow": false,
        "panels": [
            {
                "datasource": {
                    "type": "grafana-clickhouse-datasource",
                    "uid": "PDEE91DDB90597936"
                },
                "gridPos": {
                    "h": 18,
                    "w": 12,
                    "x": 0,
                    "y": 0
                },
                "id": 13,
                "options": {
                    "seriesCountSize": "sm",
                    "showSeriesCount": false,
                    "text": "Default value of text input option"
                },
                "pluginVersion": "7.5.2",
                "targets": [
                    {
                        "database": "default",
                        "datasource": {
                            "type": "grafana-clickhouse-datasource",
                            "uid": "PDEE91DDB90597936"
                        },
                        "dateColDataType": "",
                        "dateLoading": false,
                        "dateTimeColDataType": "flowEndSeconds",
                        "dateTimeType": "DATETIME",
                        "datetimeLoading": false,
                        "extrapolate": true,
                        "format": 1,
                        "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
                        "intervalFactor": 1,
                        "query": "SELECT SUM(octetDeltaCount), (sourcePodName, destinationIP) AS pair\nFROM $table\nWHERE $timeFilter\nAND flowType == 3\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-aggregator', 'flow-visibility')\nGROUP BY pair\n",
                        "queryType": "randomWalk",
                        "rawQuery": "SELECT SUM(octetDeltaCount), (sourcePodName, destinationIP) AS pair\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642534343) AND flowEndSeconds <= toDateTime(1642536143)\nAND flowType == 3\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-aggregator', 'flow-visibility')\nGROUP BY pair",
                        "rawSql": "select SUM(octetDeltaCount) as bytes, sourcePodName as source, destinationIP as destination\nFrom flows_pod_view\nWHERE flowType == 3\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(flowEndSeconds)\nGROUP BY source, destination\nHAVING bytes != 0",
                        "refId": "A",
                        "round": "0s",
                        "skip_comments": true,
                        "table": "flows_pod_view",
                        "tableLoading": false
                    }
                ],
                "title": "Cumulative Bytes of Pod-to-External",
                "transparent": true,
                "type": "antreaflowvisibility-grafana-sankey-plugin"
            },
            {
                "datasource": {
                    "type": "grafana-clickhouse-datasource",
                    "uid": "PDEE91DDB90597936"
                },
                "gridPos": {
                    "h": 18,
                    "w": 12,
                    "x": 12,
                    "y": 0
                },
                "id": 12,
                "options": {
                    "seriesCountSize": "sm",
                    "showSeriesCount": false,
                    "text": "Default value of text input option"
                },
                "pluginVersion": "7.5.2",
                "targets": [
                    {
                        "database": "default",
                        "datasource": {
                            "type": "grafana-clickhouse-datasource",
                            "uid": "PDEE91DDB90597936"
                        },
                        "dateColDataType": "",
                        "dateLoading": false,
                        "dateTimeColDataType": "flowEndSeconds",
                        "dateTimeType": "DATETIME",
                        "datetimeLoading": false,
                        "extrapolate": true,
                        "format": 1,
                        "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
                        "intervalFactor": 1,
                        "query": "SELECT SUM(reverseOctetDeltaCount), (sourcePodName, destinationIP) AS pair\nFROM $table\nWHERE $timeFilter\nAND flowType == 3\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-aggregator', 'flow-visibility')\nGROUP BY pair\n",
                        "queryType": "randomWalk",
                        "rawQuery": "SELECT SUM(reverseOctetDeltaCount), (sourcePodName, destinationIP) AS pair\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642534382) AND flowEndSeconds <= toDateTime(1642536182)\nAND flowType == 3\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-aggregator', 'flow-visibility')\nGROUP BY pair",
                        "rawSql": "select SUM(reverseOctetDeltaCount) as bytes, sourcePodName as source, destinationIP as destination\nFrom flows_pod_view\nWHERE flowType == 3\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(flowEndSeconds)\nGROUP BY source, destination\nHAVING bytes != 0",
                        "refId": "A",
                        "round": "0s",
                        "skip_comments": true,
                        "table": "flows_pod_view",
                        "tableLoading": false
                    }
                ],
                "title": "Cumulative Reverse Bytes of Pod-to-External",
                "transparent": true,
                "type": "antreaflowvisibility-grafana-sankey-plugin"
            },
            {
                "datasource": {
                    "type": "grafana-clickhouse-datasource",
                    "uid": "PDEE91DDB90597936"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "mode": "palette-classic"
                        },
                        "custom": {
                            "axisLabel": "",
                            "axisPlacement": "auto",
                            "barAlignment": 0,
                            "drawStyle": "line",
                            "fillOpacity": 10,
                            "gradientMode": "none",
                            "hideFrom": {
                                "legend": false,
                                "tooltip": false,
                                "viz": false
                            },
                            "lineInterpolation": "linear",
                            "lineStyle": {
                                "fill": "solid"
                            },
                            "lineWidth": 1,
                            "pointSize": 5,
                            "scaleDistribution": {
                                "type": "linear"
                            },
                            "showPoints": "always",
                            "spanNulls": true,
                            "stacking": {
                                "group": "A",
                                "mode": "none"
                            },
                            "thresholdsStyle": {
                                "mode": "off"
                            }
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                }
                            ]
                        },
                        "unit": "bps"
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 10,
                    "w": 12,
                    "x": 0,
                    "y": 18
                },
                "id": 2,
                "interval": "60s",
                "options": {
                    "legend": {
                        "calcs": [
                            "mean"
                        ],
                        "displayMode": "table",
                        "placement": "right"
                    },
                    "tooltip": {
                        "mode": "single"
                    }
                },
                "pluginVersion": "8.3.3",
                "targets": [
                    {
                        "database": "default",
                        "datasource": {
                            "type": "grafana-clickhouse-datasource",
                            "uid": "PDEE91DDB90597936"
                        },
                        "dateColDataType": "",
                        "dateLoading": false,
                        "dateTimeColDataType": "flowEndSeconds",
                        "dateTimeType": "DATETIME",
                        "datetimeLoading": false,
                        "extrapolate": true,
                        "format": 2,
                        "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
                        "hide": false,
                        "intervalFactor": 1,
                        "query": "SELECT $timeSeries as t, SUM(octetDeltaCount), (sourcePodName, destinationIP) as pair\nFROM $table\nWHERE $timeFilter\nAND flowType == 3\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair,t\nORDER BY t\n",
                        "queryType": "sql",
                        "rawQuery": "SELECT (intDiv(toUInt32(flowEndSeconds), 60) * 60) * 1000 as t, SUM(octetDeltaCount), (sourcePodName, destinationIP) as pair\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642534150) AND flowEndSeconds <= toDateTime(1642535950)\nAND flowType == 3\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair,t\nORDER BY t",
                        "rawSql": "SELECT $__timeInterval(flowEndSeconds) as time, CONCAT(sourcePodName, '->', destinationIP) as pair, SUM(throughput)\nFROM flows_pod_view\nWHERE flowType == 3\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(time)\nGROUP BY time, pair\nHAVING SUM(throughput) != 0\nORDER BY time",
                        "refId": "A",
                        "round": "0s",
                        "skip_comments": true,
                        "table": "flows_pod_view",
                        "tableLoading": false
                    }
                ],
                "title": "Throughput of Pod-to-External",
                "transformations": [
                    {
                        "id": "groupBy",
                        "options": {
                            "fields": {
                                "Time": {
                                    "aggregations": [],
                                    "operation": "aggregate"
                                }
                            }
                        }
                    },
                    {
                        "id": "labelsToFields",
                        "options": {
                            "valueLabel": "pair"
                        }
                    }
                ],
                "transparent": true,
                "type": "timeseries"
            },
            {
                "datasource": {
                    "type": "grafana-clickhouse-datasource",
                    "uid": "PDEE91DDB90597936"
                },
                "fieldConfig": {
                    "defaults": {
                        "color": {
                            "mode": "palette-classic"
                        },
                        "custom": {
                            "axisLabel": "",
                            "axisPlacement": "auto",
                            "barAlignment": 0,
                            "drawStyle": "line",
                            "fillOpacity": 10,
                            "gradientMode": "none",
                            "hideFrom": {
                                "legend": false,
                                "tooltip": false,
                                "viz": false
                            },
                            "lineInterpolation": "linear",
                            "lineWidth": 1,
                            "pointSize": 5,
                            "scaleDistribution": {
                                "type": "linear"
                            },
                            "showPoints": "always",
                            "spanNulls": true,
                            "stacking": {
                                "group": "A",
                                "mode": "none"
                            },
                            "thresholdsStyle": {
                                "mode": "off"
                            }
                        },
                        "mappings": [],
                        "thresholds": {
                            "mode": "absolute",
                            "steps": [
                                {
                                    "color": "green",
                                    "value": null
                                }
                            ]
                        },
                        "unit": "decbytes"
                    },
                    "overrides": []
                },
                "gridPos": {
                    "h": 10,
                    "w": 12,
                    "x": 12,
                    "y": 18
                },
                "id": 7,
                "interval": "60s",
                "options": {
                    "legend": {
                        "calcs": [
                            "mean"
                        ],
                        "displayMode": "table",
                        "placement": "right"
                    },
                    "tooltip": {
                        "mode": "single"
                    }
                },
                "pluginVersion": "8.3.3",
                "targets": [
                    {
                        "database": "default",
                        "datasource": {
                            "type": "grafana-clickhouse-datasource",
                            "uid": "PDEE91DDB90597936"
                        },
                        "dateColDataType": "",
                        "dateLoading": false,
                        "dateTimeColDataType": "flowEndSeconds",
                        "dateTimeType": "DATETIME",
                        "datetimeLoading": false,
                        "extrapolate": true,
                        "format": 2,
                        "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
                        "hide": false,
                        "intervalFactor": 1,
                        "query": "SELECT $timeSeries as t, SUM(reverseOctetDeltaCount), (sourcePodName, destinationIP) as pair\nFROM $table\nWHERE $timeFilter\nAND flowType == 3\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair, t\nORDER BY t",
                        "queryType": "sql",
                        "rawQuery": "SELECT (intDiv(toUInt32(flowEndSeconds), 60) * 60) * 1000 as t, SUM(reverseOctetDeltaCount), (sourcePodName, destinationIP) as pair\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642534246) AND flowEndSeconds <= toDateTime(1642536046)\nAND flowType == 3\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair, t\nORDER BY t",
                        "rawSql": "SELECT $__timeInterval(flowEndSeconds) as time, CONCAT(sourcePodName, '->', destinationIP) as pair, SUM(reverseThroughput)\nFROM flows_pod_view\nWHERE flowType == 3\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(time)\nGROUP BY time, pair\nHAVING SUM(reverseThroughput) != 0\nORDER BY time",
                        "refId": "A",
                        "round": "0s",
                        "skip_comments": true,
                        "table": "flows_pod_view",
                        "tableLoading": false
                    }
                ],
                "title": "Reverse Throughput of Pod-to-External",
                "transformations": [
                    {
                        "id": "groupBy",
                        "options": {
                            "fields": {
                                "Time": {
                                    "aggregations": [],
                                    "operation": "aggregate"
                                }
                            }
                        }
                    },
                    {
                        "id": "labelsToFields",
                        "options": {
                            "valueLabel": "pair"
                        }
                    }
                ],
                "transparent": true,
                "type": "timeseries"
            }
        ],
        "refresh": "",
        "schemaVersion": 34,
        "style": "dark",
        "tags": [],
        "templating": {
            "list": [
                {
                    "datasource": {
                        "type": "grafana-clickhouse-datasource",
                        "uid": "PDEE91DDB90597936"
                    },
                    "filters": [],
                    "hide": 0,
                    "name": "Filter",
                    "skipUrlSync": false,
                    "type": "adhoc"
                },
                {
                    "hide": 2,
                    "name": "clickhouse_adhoc_query",
                    "query": "default.flows_pod_view",
                    "skipUrlSync": false,
                    "type": "constant"
                }
            ]
        },
        "time": {
            "from": "now-30m",
            "to": "now"
        },
        "timepicker": {},
        "timezone": "",
        "title": "pod_to_external_dashboard",
        "uid": "K9SPrnJ7k",
        "version": 3,
        "weekStart": ""
    }
  pod_to_pod_dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 1,
      "iteration": 1644971511247,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 13,
          "options": {
            "seriesCountSize": "sm",
            "showSeriesCount": false,
            "text": "Default value of text input option"
          },
          "pluginVersion": "7.5.2",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 1,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "intervalFactor": 1,
              "query": "SELECT SUM(octetDeltaCount), (sourcePodName, destinationPodName, destinationIP) AS pair\nFROM $table\nWHERE $timeFilter\nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair\n",
              "queryType": "sql",
              "rawQuery": "SELECT SUM(octetDeltaCount), (sourcePodName, destinationPodName, destinationIP) AS pair\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642531723) AND flowEndSeconds <= toDateTime(1642533523)\nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair",
              "rawSql": "select SUM(octetDeltaCount) as bytes, sourcePodName as source, destinationPodName as destination, destinationIP\nFrom flows_pod_view\nWHERE flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(flowEndSeconds)\nGROUP BY source, destination, destinationIP",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Cumulative Bytes of Pod-to-Pod",
          "transparent": true,
          "type": "antreaflowvisibility-grafana-sankey-plugin"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "id": 12,
          "options": {
            "seriesCountSize": "sm",
            "showSeriesCount": false,
            "text": "Default value of text input option"
          },
          "pluginVersion": "7.5.2",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 1,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "intervalFactor": 1,
              "query": "SELECT SUM(reverseOctetDeltaCount), (sourcePodName, destinationPodName, destinationIP) AS pair\nFROM $table\nWHERE $timeFilter\nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair\n",
              "queryType": "randomWalk",
              "rawQuery": "SELECT SUM(reverseOctetDeltaCount), (sourcePodName, destinationPodName, destinationIP) AS pair\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642531743) AND flowEndSeconds <= toDateTime(1642533543)\nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair",
              "rawSql": "select SUM(reverseOctetDeltaCount) as bytes, sourcePodName as source, destinationPodName as destination, destinationIP\nFrom flows_pod_view\nWHERE flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(flowEndSeconds)\nGROUP BY source, destination, destinationIP",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Cumulative Reverse Bytes of Pod-to-Pod",
          "transparent": true,
          "type": "antreaflowvisibility-grafana-sankey-plugin"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 18
          },
          "id": 21,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromSourceNode), sourcePodName\nFROM $table\nWHERE $timeFilter \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSeconds), 60) * 60) * 1000 as t, SUM(throughputFromSourceNode), sourcePodName\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642532448) AND flowEndSeconds <= toDateTime(1642534248) \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSeconds) as time, CONCAT(sourcePodName, '->', destinationPodName) as pair, SUM(throughput)\nFROM flows_pod_view\nWHERE flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(time)\nGROUP BY time, pair\nHAVING SUM(throughput) > 0\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Throughput of Pod-to-Pod",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "pair"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 18
          },
          "id": 22,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromSourceNode), sourcePodName\nFROM $table\nWHERE $timeFilter \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSeconds), 60) * 60) * 1000 as t, SUM(throughputFromSourceNode), sourcePodName\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642532448) AND flowEndSeconds <= toDateTime(1642534248) \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSeconds) as time, CONCAT(sourcePodName, '->', destinationPodName) as pair, SUM(reverseThroughput)\nFROM flows_pod_view\nWHERE flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(time)\nGROUP BY time, pair\nHAVING SUM(reverseThroughput) > 0\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Reverse Throughput of Pod-to-Pod",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "pair"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 28
          },
          "id": 15,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromSourceNode), sourcePodName\nFROM $table\nWHERE $timeFilter \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSeconds), 60) * 60) * 1000 as t, SUM(throughputFromSourceNode), sourcePodName\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642532448) AND flowEndSeconds <= toDateTime(1642534248) \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSecondsFromSourceNode) as time, sourcePodName, SUM(throughputFromSourceNode)\nFROM flows_pod_view\nWHERE flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(time)\nGROUP BY time, sourcePodName\nHAVING SUM(throughputFromSourceNode) > 0\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Throughput of Pod as Source",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "sourcePodName"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": [],
              "unit": "decbytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 28
          },
          "id": 18,
          "options": {
            "legend": {
              "displayMode": "table",
              "placement": "right",
              "values": [
                "percent",
                "value"
              ]
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": true
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "format": 1,
              "queryType": "sql",
              "rawSql": "select SUM(octetDeltaCount) as bytes, sourcePodNamespace\nFrom flows_pod_view\nWHERE flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(flowEndSeconds)\nGROUP BY sourcePodNamespace\nHAVING bytes > 0",
              "refId": "A"
            }
          ],
          "title": "Cumulative Bytes of Source Pod Namespace",
          "transparent": true,
          "type": "piechart"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 38
          },
          "id": 16,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSecondsFromDestinationNode",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromDestinationNode), destinationPodName\nFROM $table\nWHERE $timeFilter \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY destinationPodName, t\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSecondsFromDestinationNode), 60) * 60) * 1000 as t, SUM(throughputFromDestinationNode), destinationPodName\nFROM default.flows_pod_view\nWHERE flowEndSecondsFromDestinationNode >= toDateTime(1642532702) AND flowEndSecondsFromDestinationNode <= toDateTime(1642534502) \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY destinationPodName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSecondsFromDestinationNode) as time, destinationPodName, SUM(throughputFromDestinationNode)\nFROM flows_pod_view\nWHERE flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(time)\nGROUP BY time, destinationPodName\nHAVING SUM(throughputFromDestinationNode) > 0\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Throughput of Pod as Destination",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "destinationPodName"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": [],
              "unit": "decbytes"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "destinationPodNamespace"
                },
                "properties": [
                  {
                    "id": "noValue",
                    "value": "N/A"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 38
          },
          "id": 19,
          "options": {
            "legend": {
              "displayMode": "table",
              "placement": "right",
              "values": [
                "percent",
                "value"
              ]
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": true
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "format": 1,
              "rawSql": "select SUM(octetDeltaCount) as bytes, destinationPodNamespace\nFrom flows_pod_view\nWHERE flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND $__timeFilter(flowEndSeconds)\nGROUP BY destinationPodNamespace",
              "refId": "A"
            }
          ],
          "title": "Cumulative Bytes of Destination Pod Namespace",
          "transparent": true,
          "type": "piechart"
        }
      ],
      "refresh": "",
      "schemaVersion": 34,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "PDEE91DDB90597936"
            },
            "filters": [],
            "hide": 0,
            "name": "Filter",
            "skipUrlSync": false,
            "type": "adhoc"
          },
          {
            "hide": 2,
            "name": "clickhouse_adhoc_query",
            "query": "default.flows_pod_view",
            "skipUrlSync": false,
            "type": "constant"
          }
        ]
      },
      "time": {
        "from": "now-30m",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "pod_to_pod_dashboard",
      "uid": "Yxn0Ghh7k",
      "version": 9,
      "weekStart": ""
    }
  pod_to_service_dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 1,
      "iteration": 1644612951629,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 13,
          "options": {
            "seriesCountSize": "sm",
            "showSeriesCount": false,
            "text": "Default value of text input option"
          },
          "pluginVersion": "7.5. 2",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 1,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "intervalFactor": 1,
              "query": "SELECT SUM(octetDeltaCount), (sourcePodName, destinationServicePortName) AS pair\nFROM $table\nWHERE $timeFilter\nAND destinationServicePortName != ''\nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair\n",
              "queryType": "randomWalk",
              "rawQuery": "SELECT SUM(octetDeltaCount), (sourcePodName, destinationServicePortName) AS pair\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642193285) AND flowEndSeconds <= toDateTime(1642195085)\nAND destinationServicePortName != ''\nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair",
              "rawSql": "select SUM(octetDeltaCount) as bytes, sourcePodName as source, destinationServicePortName as destination\nFrom flows_pod_view\nWHERE flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationServicePortName != ''\nAND $__timeFilter(flowEndSeconds)\nGROUP BY source, destination",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Cumulative Bytes Pod-to-Service",
          "transparent": true,
          "type": "antreaflowvisibility-grafana-sankey-plugin"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "gridPos": {
            "h": 18,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "id": 12,
          "options": {
            "seriesCountSize": "sm",
            "showSeriesCount": false,
            "text": "Default value of text input option"
          },
          "pluginVersion": "7.5. 2",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 1,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "intervalFactor": 1,
              "query": "SELECT SUM(reverseOctetDeltaCount), (sourcePodName, destinationServicePortName) AS pair\nFROM $table\nWHERE $timeFilter\nAND destinationServicePortName != ''\nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair\n",
              "queryType": "randomWalk",
              "rawQuery": "SELECT SUM(reverseOctetDeltaCount), (sourcePodName, destinationServicePortName) AS pair\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642193431) AND flowEndSeconds <= toDateTime(1642195231)\nAND destinationServicePortName != ''\nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY pair",
              "rawSql": "select SUM(reverseOctetDeltaCount) as bytes, sourcePodName as source, destinationServicePortName as destination\nFrom flows_pod_view\nWHERE flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationServicePortName != ''\nAND $__timeFilter(flowEndSeconds)\nGROUP BY source, destination",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Cumulative Reverse Bytes Pod-to-Service",
          "transparent": true,
          "type": "antreaflowvisibility-grafana-sankey-plugin"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 18
          },
          "id": 18,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromSourceNode), sourcePodName\nFROM $table\nWHERE $timeFilter \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSeconds), 60) * 60) * 1000 as t, SUM(throughputFromSourceNode), sourcePodName\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642532448) AND flowEndSeconds <= toDateTime(1642534248) \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSeconds) as time, CONCAT(sourcePodName, '->', destinationServicePortName) as pair, SUM(throughput) as Pod\nFROM flows_pod_view\nWHERE flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationServicePortName != ''\nAND $__timeFilter(flowEndSeconds)\nGROUP BY time, pair\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Throughput of Pod-to-Service",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "pair"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 18
          },
          "id": 19,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromSourceNode), sourcePodName\nFROM $table\nWHERE $timeFilter \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSeconds), 60) * 60) * 1000 as t, SUM(throughputFromSourceNode), sourcePodName\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642532448) AND flowEndSeconds <= toDateTime(1642534248) \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSeconds) as time, CONCAT(sourcePodName, '->', destinationServicePortName) as pair, SUM(reverseThroughput) as Pod\nFROM flows_pod_view\nWHERE flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationServicePortName != ''\nAND $__timeFilter(time)\nGROUP BY time, pair\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Reverse Throughput of Pod-to-Service",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "pair"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 0,
            "y": 28
          },
          "id": 20,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromSourceNode), sourcePodName\nFROM $table\nWHERE $timeFilter \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSeconds), 60) * 60) * 1000 as t, SUM(throughputFromSourceNode), sourcePodName\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642532448) AND flowEndSeconds <= toDateTime(1642534248) \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSecondsFromSourceNode) as time, sourcePodName, SUM(throughputFromSourceNode) as Pod\nFROM flows_pod_view\nWHERE flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationServicePortName != ''\nAND $__timeFilter(time)\nGROUP BY time, sourcePodName\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Throughput of Pod as Source",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "sourcePodName"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDEE91DDB90597936"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "always",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "bps"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 12,
            "x": 12,
            "y": 28
          },
          "id": 21,
          "interval": "60s",
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.3",
          "targets": [
            {
              "database": "default",
              "datasource": {
                "type": "grafana-clickhouse-datasource",
                "uid": "PDEE91DDB90597936"
              },
              "dateColDataType": "",
              "dateLoading": false,
              "dateTimeColDataType": "flowEndSeconds",
              "dateTimeType": "DATETIME",
              "datetimeLoading": false,
              "extrapolate": true,
              "format": 2,
              "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
              "hide": false,
              "intervalFactor": 1,
              "query": "SELECT $timeSeries as t, SUM(throughputFromSourceNode), sourcePodName\nFROM $table\nWHERE $timeFilter \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t\n",
              "queryType": "sql",
              "rawQuery": "SELECT (intDiv(toUInt32(flowEndSeconds), 60) * 60) * 1000 as t, SUM(throughputFromSourceNode), sourcePodName\nFROM default.flows_pod_view\nWHERE flowEndSeconds >= toDateTime(1642532448) AND flowEndSeconds <= toDateTime(1642534248) \nAND flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nGROUP BY sourcePodName, t\nORDER BY t",
              "rawSql": "SELECT $__timeInterval(flowEndSecondsFromDestinationNode) as time, destinationServicePortName, SUM(throughputFromDestinationNode) as Service\nFROM flows_pod_view\nWHERE flowType IN (1, 2)\nAND sourcePodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationPodNamespace NOT IN ('kube-system', 'flow-visibility', 'flow-aggregator')\nAND destinationServicePortName != ''\nAND $__timeFilter(time)\nGROUP BY time, destinationServicePortName\nORDER BY time",
              "refId": "A",
              "round": "0s",
              "skip_comments": true,
              "table": "flows_pod_view",
              "tableLoading": false
            }
          ],
          "title": "Throughput of Service as Destination",
          "transformations": [
            {
              "id": "groupBy",
              "options": {
                "fields": {
                  "Time": {
                    "aggregations": [],
                    "operation": "aggregate"
                  }
                }
              }
            },
            {
              "id": "labelsToFields",
              "options": {
                "valueLabel": "destinationServicePortName"
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        }
      ],
      "refresh": "",
      "schemaVersion": 34,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "datasource": {
              "type": "grafana-clickhouse-datasource",
              "uid": "PDEE91DDB90597936"
            },
            "filters": [],
            "hide": 0,
            "name": "Filter",
            "skipUrlSync": false,
            "type": "adhoc"
          },
          {
            "hide": 2,
            "name": "clickhouse_adhoc_query",
            "query": "default.flows_pod_view",
            "skipUrlSync": false,
            "type": "constant"
          }
        ]
      },
      "time": {
        "from": "now-30m",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "pod_to_service_dashboard",
      "uid": "LGdxbW17z",
      "version": 8,
      "weekStart": ""
    }
---
# Source: theia/templates/grafana/dashboard-provider-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-provider
  namespace: flow-visibility
data:
  dashboard_provider.yaml: |-
    apiVersion: 1
    providers:
      - name: grafana-dashboards
        folder: ''
        type: file
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards
---
# Source: theia/templates/grafana/datasource-provider-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource-provider
  namespace: flow-visibility
data:
  datasource_provider.yaml: |-
    apiVersion: 1
    datasources:
      - name: ClickHouse
        type: grafana-clickhouse-datasource
        access: proxy
        url: http://clickhouse-clickhouse.flow-visibility.svc:8123
        editable: true
        jsonData:
          server: clickhouse-clickhouse.flow-visibility.svc
          port: 9000
          username: $CLICKHOUSE_USERNAME
        secureJsonData:
          password: $CLICKHOUSE_PASSWORD
---
# Source: theia/templates/grafana/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: grafana-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
allowVolumeExpansion: True
---
# Source: theia/templates/grafana/persistentvolume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-pv
spec:
  storageClassName: grafana-storage
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/grafana"
---
# Source: theia/templates/grafana/persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: flow-visibility
spec:
  storageClassName: grafana-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: theia/templates/grafana/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: flow-visibility
  name: grafana-role
  namespace: flow-visibility
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
---
# Source: theia/templates/grafana/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: flow-visibility
  name: grafana-role-binding
  namespace: flow-visibility
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: grafana-role
subjects:
  - kind: ServiceAccount
    name: grafana
    namespace: flow-visibility
---
# Source: theia/templates/clickhouse/zookeeper.yaml
# Setup Service to provide access to Zookeeper for clients
apiVersion: v1
kind: Service
metadata:
  # DNS would be like zookeeper.zoons
  name: zookeeper
  labels:
    app: zookeeper
  namespace: zoons
spec:
  ports:
    - port: 2181
      name: client
    - port: 7000
      name: prometheus
  selector:
    app: zookeeper
    what: node
---
# Source: theia/templates/clickhouse/zookeeper.yaml
# Setup Headless Service for StatefulSet
apiVersion: v1
kind: Service
metadata:
  # DNS would be like zookeeper-0.zookeepers.etc
  name: zookeepers
  labels:
    app: zookeeper
  namespace: zoons
spec:
  ports:
    - port: 2888
      name: server
    - port: 3888
      name: leader-election
  clusterIP: None
  selector:
    app: zookeeper
    what: node
---
# Source: theia/templates/grafana/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: flow-visibility
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: http-grafana
  selector:
    app: grafana
  sessionAffinity: None
  type: NodePort
---
# Source: theia/templates/grafana/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: flow-visibility
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      serviceAccountName: grafana
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: projects.registry.vmware.com/antrea/flow-visibility-grafana:8.3.3
          imagePullPolicy: IfNotPresent
          env:
            - name: GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS
              value: vertamedia-clickhouse-datasource
            - name: GF_INSTALL_PLUGINS
              value: "https://downloads.antrea.io/artifacts/grafana-custom-plugins/grafana-sankey-plugin-1.0.0.zip;antreaflowvisibility-grafana-sankey-plugin,grafana-clickhouse-datasource 1.0.1"
            - name: CLICKHOUSE_USERNAME
              valueFrom:
                secretKeyRef: 
                  name: clickhouse-secret
                  key: username
            - name: CLICKHOUSE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: clickhouse-secret
                  key: password
            - name: GF_AUTH_BASIC_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "false"
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-secret
                  key: admin-username
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-secret
                  key: admin-password
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
            - mountPath: /data
              name: grafana-pv
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasource-provider
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboard-provider
            - mountPath: /var/lib/grafana/dashboards
              name: grafana-dashboard-config
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-datasource-provider
          configMap:
            name: grafana-datasource-provider
        - name: grafana-dashboard-provider
          configMap:
            name: grafana-dashboard-provider
        - name: grafana-dashboard-config
          configMap:
            name: grafana-dashboard-config
---
# Source: theia/templates/clickhouse/zookeeper.yaml
# Setup Zookeeper StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  labels:
    app: zookeeper
  namespace: zoons
spec:
  selector:
    matchLabels:
      app: zookeeper
  serviceName: zookeepers
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: zookeeper
        what: node
      annotations:
        prometheus.io/port: '7000'
        prometheus.io/scrape: 'true'
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - zookeeper
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: kubernetes-zookeeper
          imagePullPolicy: IfNotPresent
          image: "docker.io/zookeeper:3.8.0"
          resources:
            requests:
              memory: "1Gi"
              cpu: "0.5"
            limits:
              memory: "16Gi"
              cpu: "2"
          ports:
            - containerPort: 2181
              name: client
            - containerPort: 2888
              name: server
            - containerPort: 3888
              name: leader-election
            - containerPort: 7000
              name: prometheus
# See those links for proper startup settings:
# https://github.com/kow3ns/kubernetes-zookeeper/blob/master/docker/scripts/start-zookeeper
# https://clickhouse.yandex/docs/en/operations/tips/#zookeeper
# https://github.com/ClickHouse/ClickHouse/issues/11781
          command:
            - bash
            - -x
            - -c
            - |
              SERVERS=1 &&
              HOST=`hostname -s` &&
              DOMAIN=`hostname -d` &&
              CLIENT_PORT=2181 &&
              SERVER_PORT=2888 &&
              ELECTION_PORT=3888 &&
              PROMETHEUS_PORT=7000 &&
              ZOO_DATA_DIR=/var/lib/zookeeper/data &&
              ZOO_DATA_LOG_DIR=/var/lib/zookeeper/datalog &&
              {
                echo "clientPort=${CLIENT_PORT}"
                echo 'tickTime=2000'
                echo 'initLimit=300'
                echo 'syncLimit=10'
                echo 'maxClientCnxns=2000'
                echo 'maxSessionTimeout=60000000'
                echo "dataDir=${ZOO_DATA_DIR}"
                echo "dataLogDir=${ZOO_DATA_LOG_DIR}"
                echo 'autopurge.snapRetainCount=10'
                echo 'autopurge.purgeInterval=1'
                echo 'preAllocSize=131072'
                echo 'snapCount=3000000'
                echo 'leaderServes=yes'
                echo 'standaloneEnabled=false'
                echo '4lw.commands.whitelist=*'
                echo 'metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider'
                echo "metricsProvider.httpPort=${PROMETHEUS_PORT}"
              } > /conf/zoo.cfg &&
              {
                echo "zookeeper.root.logger=CONSOLE"
                echo "zookeeper.console.threshold=INFO"
                echo "log4j.rootLogger=\${zookeeper.root.logger}"
                echo "log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender"
                echo "log4j.appender.CONSOLE.Threshold=\${zookeeper.console.threshold}"
                echo "log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout"
                echo "log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n"
              } > /conf/log4j.properties &&
              echo 'JVMFLAGS="-Xms128M -Xmx4G -XX:+UseG1GC -XX:+CMSParallelRemarkEnabled -XX:ActiveProcessorCount=8"' > /conf/java.env &&
              if [[ $HOST =~ (.*)-([0-9]+)$ ]]; then
                  NAME=${BASH_REMATCH[1]}
                  ORD=${BASH_REMATCH[2]}
              else
                  echo "Failed to parse name and ordinal of Pod"
                  exit 1
              fi &&
              mkdir -p ${ZOO_DATA_DIR} &&
              mkdir -p ${ZOO_DATA_LOG_DIR} &&
              export MY_ID=$((ORD+1)) &&
              echo $MY_ID > $ZOO_DATA_DIR/myid &&
              for (( i=1; i<=$SERVERS; i++ )); do
                  echo "server.$i=$NAME-$((i-1)).$DOMAIN:$SERVER_PORT:$ELECTION_PORT" >> /conf/zoo.cfg;
              done &&
              if [[ $SERVERS -eq 1 ]]; then
                  echo "group.1=1" >> /conf/zoo.cfg;
              else
                  echo "group.1=1:2:3" >> /conf/zoo.cfg;
              fi &&
              for (( i=1; i<=$SERVERS; i++ )); do
                  WEIGHT=1
                  if [[ $i == 1 ]]; then
                    WEIGHT=10
                  fi
                  echo "weight.$i=$WEIGHT" >> /conf/zoo.cfg;
              done &&
              chown -Rv zookeeper "$ZOO_DATA_DIR" "$ZOO_DATA_LOG_DIR" "$ZOO_LOG_DIR" "$ZOO_CONF_DIR" &&
              zkServer.sh start-foreground
          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - "OK=$(echo ruok | nc 127.0.0.1 2181);
                   if [[ \"$OK\" == \"imok\" ]];
                   then
                      STATE=$(echo mntr | nc 127.0.0.1 2181 | grep zk_server_state | cut -d \" \" -f 2);
                      if [[ \"$STATE\" == \"leader\" ]]; then
                        SYNCED_FOLLOWERS=$(echo mntr | nc 127.0.0.1 2181 | grep zk_synced_followers | cut -d \" \" -f 2 | cut -d \".\" -f 1);
                        if [[ $SYNCED_FOLLOWERS == $(( $SERVERS - 1 )) ]]; then
                          ./bin/zkCli.sh ls /;
                          exit $?;
                        else
                          exit 1;
                        fi;
                      elif [[ \"$STATE\" == \"follower\" ]]; then
                        PEER_STATE=$(echo mntr | nc 127.0.0.1 2181 | grep zk_peer_state);
                        if [[ \"$PEER_STATE\" == \"following - broadcast\" ]]; then
                          ./bin/zkCli.sh ls /;
                          exit $?;
                        else
                          exit 1;
                        fi;
                      fi;
                    else
                      exit 1;
                    fi"
            initialDelaySeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - "OK=$(echo ruok | nc 127.0.0.1 2181); if [[ \"$OK\" == \"imok\" ]]; then exit 0; else exit 1; fi"
            initialDelaySeconds: 10
            timeoutSeconds: 5
          volumeMounts:
            - name: datadir-volume
              mountPath: /var/lib/zookeeper
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: datadir-volume
          emptyDir:
            medium: ""
            sizeLimit: 16Gi
---
# Source: theia/templates/clickhouse/clickhouseinstallation.yaml
apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseInstallation"
metadata:
  name: clickhouse
  labels:
    app: clickhouse
  namespace: flow-visibility
spec:
  configuration:
    users:
      clickhouse_operator/k8s_secret_password: flow-visibility/clickhouse-secret/password
      clickhouse_operator/networks/ip: "::/0"
    clusters:
      - name: "clickhouse"
        layout:
          shardsCount: 2
          replicasCount: 1
    zookeeper:
      nodes:
      - host: zookeeper.zoons
  defaults:
    templates:
      podTemplate: pod-template
      serviceTemplate: service-template
  templates:
    podTemplates:
      - name: pod-template
        podDistribution:
          - type: ClickHouseAntiAffinity
          - type: MaxNumberPerNode
            number: 1
            # Apply podDistribution on per-host basis
            topologyKey: "kubernetes.io/hostname"
            # Apply podDistribution on per-zone basis
            #topologyKey: "kubernetes.io/zone"
        spec:
          containers:
            - image: projects.registry.vmware.com/antrea/flow-visibility-clickhouse-server:21.11
              name: clickhouse
              volumeMounts:
                - mountPath: /var/lib/clickhouse
                  name: clickhouse-storage-volume
            - env:
                - name: CLICKHOUSE_USERNAME
                  valueFrom:
                    secretKeyRef:
                      key: username
                      name: clickhouse-secret
                - name: CLICKHOUSE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: clickhouse-secret
                - name: DB_URL
                  value: tcp://localhost:9000
                - name: TABLE_NAME
                  value: default.flows_local
                - name: MV_NAMES
                  value: default.flows_pod_view_local default.flows_node_view_local default.flows_policy_view_local
                - name: STORAGE_SIZE
                  value: 16Gi
              image: projects.registry.vmware.com/antrea/flow-visibility-clickhouse-monitor:latest
              imagePullPolicy: IfNotPresent
              name: clickhouse-monitor
          volumes:
            - configMap:
                name: clickhouse-mounted-configmap
              name: clickhouse-configmap-volume
            - emptyDir:
                medium: Memory
                sizeLimit: 16Gi
              name: clickhouse-storage-volume
    serviceTemplates:
      - name: service-template
        spec:
          ports:
            - name: http
              port: 8123
            - name: tcp
              port: 9000
